import{ab as d,C as s,D as c,A as e,O as a,J as i,ac as l,ad as n,R as t}from"./framework-e618a78f.js";const h="/assets/20230217171306-bdedeeb4.png",u="/assets/20230217173136-e4b7ca39.png",_="/assets/20230217171556-cb68c300.png",p="/assets/20230217174537-d25b6658.png",m="/assets/20230217174656-98363812.png",b={},v=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"提示"),e("p",null,[a("在开始之前先检查一下"),e("code",null,"C:\\Users"),a("下的用户名是否含有特殊字符，是否是汉语，否则无法正常使用")])],-1),g=e("h2",{id:"_1-安装插件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-安装插件","aria-hidden":"true"},"#"),a(" 1.安装插件")],-1),x={href:"https://marketplace.visualstudio.com/items?itemName=CL.eide",target:"_blank",rel:"noopener noreferrer"},f={href:"https://marketplace.visualstudio.com/items?itemName=marus25.cortex-debug",target:"_blank",rel:"noopener noreferrer"},C={href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools",target:"_blank",rel:"noopener noreferrer"},k={href:"https://marketplace.visualstudio.com/items?itemName=GitHub.copilot",target:"_blank",rel:"noopener noreferrer"},D=n('<h2 id="_2-插件配置" tabindex="-1"><a class="header-anchor" href="#_2-插件配置" aria-hidden="true">#</a> 2.插件配置</h2><h4 id="embedded-ide-导入工程-编译-下载" tabindex="-1"><a class="header-anchor" href="#embedded-ide-导入工程-编译-下载" aria-hidden="true">#</a> Embedded IDE -- 导入工程，编译，下载</h4><h5 id="插件的基础配置-我截图的这几个是需要配置的" tabindex="-1"><a class="header-anchor" href="#插件的基础配置-我截图的这几个是需要配置的" aria-hidden="true">#</a> 插件的基础配置，我截图的这几个是需要配置的</h5>',3),I=e("img",{src:h,alt:"",loading:"lazy"},null,-1),S=e("code",null,"CMSIS-DAP",-1),A=e("code",null,"PATH",-1),F={href:"https://download.bestrui.top/%E8%BD%AF%E4%BB%B6/windows/openocd-20230202.7z",target:"_blank",rel:"noopener noreferrer"},w=e("img",{src:u,alt:"",loading:"lazy"},null,-1),L=n('<h5 id="导入工程后的配置" tabindex="-1"><a class="header-anchor" href="#导入工程后的配置" aria-hidden="true">#</a> 导入工程后的配置：</h5><ul><li>点击<code>芯片支持包</code>选项右边的<code>＋</code>选择<code>From Repo</code></li><li>直接搜索<code>stm32</code>选择开发板的型号</li><li>导入完成后接着选择开发板的具体型号</li><li><code>构建配置</code>根据自己的项目选择</li><li><code>烧录配置</code>如果你也和我一样使用的是<code>CMSIS-DAP</code>调试器，那这里选择<code>OpenOCD</code>，子选项根据自己工程配置 这是我配置成功的截图 <img src="'+_+'" alt="" loading="lazy"></li></ul><h4 id="cortex-debug-代码调试" tabindex="-1"><a class="header-anchor" href="#cortex-debug-代码调试" aria-hidden="true">#</a> Cortex-Debug -- 代码调试</h4><p>在家里没有可以用的设备，暂时先不写</p><h4 id="c-c-跳转定义" tabindex="-1"><a class="header-anchor" href="#c-c-跳转定义" aria-hidden="true">#</a> C/C++ -- 跳转定义</h4><p>命令面板搜索<code>C/C++</code>选择<code>编辑配置(UI)</code></p><p><img src="'+p+'" alt="" loading="lazy"> 配置<code>包含路径</code></p><figure><img src="'+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//引用instdint.h报错
D:\\APP\\keil\\core\\ARM\\ARMCLANG\\include\\

//引用头文件报错
\${workspaceFolder}/**
\${workspaceFolder}/Core/Inc/
\${workspaceFolder}/Drivers/STM32F4xx_HAL_Driver/Inc/
\${workspaceFolder}/Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/
\${workspaceFolder}/Drivers/CMSIS/Device/ST/STM32F4xx/Include/
\${workspaceFolder}/Drivers/CMSIS/Include/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="github-copilot-ai" tabindex="-1"><a class="header-anchor" href="#github-copilot-ai" aria-hidden="true">#</a> GitHub Copilot -- AI</h4>`,10);function E(M,N){const o=t("ExternalLinkIcon"),r=t("RouterLink");return s(),c("div",null,[v,g,e("ul",null,[e("li",null,[e("a",x,[a("Embedded IDE"),i(o)])]),e("li",null,[e("a",f,[a("Cortex-Debug"),i(o)]),a(")")]),e("li",null,[e("a",C,[a("C/C++"),i(o)])]),e("li",null,[e("a",k,[a("GitHub Copilot"),i(o)])])]),D,e("p",null,[I,a(" 因为我使用的是"),S,a("调试器，所以这里的"),A,a("需要配置 OpenOCD可以在这里"),e("a",F,[a("下载"),i(o)]),w]),L,e("p",null,[a("学生用户免费 "),i(r,{to:"/Learn/Other/Github/student.html"},{default:l(()=>[a("申请学生包")]),_:1})])])}const y=d(b,[["render",E],["__file","vscode.html.vue"]]);export{y as default};
