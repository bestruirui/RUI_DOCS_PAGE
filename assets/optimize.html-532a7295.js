import{ab as n,C as s,D as a,ad as p}from"./framework-e618a78f.js";const t={},e=p(`<div class="custom-container tip"><p class="custom-container-title">提示</p><p>主要是善用位运算</p></div><h3 id="乘除法" tabindex="-1"><a class="header-anchor" href="#乘除法" aria-hidden="true">#</a> 乘除法</h3><p>位操作只需一个指令周期即可完成<br> 左乘右除<br><code>&lt;&lt;</code>(向左位移) 针对二进制，转换成二进制后(32位)向左边移动n位 ，相当于这个整数乘以2的n次方；<br><code>&gt;&gt;</code>(向右位移) 针对二进制，转换成二进制后(32位)向右移动n位,相当于这个整数除以2的n次方,正数高位补0, 正数高位补1；</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>MOTOR<span class="token operator">-&gt;</span>DATA<span class="token punctuation">.</span>Angle_Infinite <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">int32_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">8192</span> <span class="token operator">*</span> MOTOR<span class="token operator">-&gt;</span>DATA<span class="token punctuation">.</span>Laps <span class="token operator">+</span> MOTOR<span class="token operator">-&gt;</span>DATA<span class="token punctuation">.</span>Angle_now<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//上述代码可优化为</span>
MOTOR<span class="token operator">-&gt;</span>DATA<span class="token punctuation">.</span>Angle_Infinite <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">int32_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>MOTOR<span class="token operator">-&gt;</span>DATA<span class="token punctuation">.</span>Laps <span class="token operator">&lt;&lt;</span> <span class="token number">13</span><span class="token punctuation">)</span>  <span class="token operator">+</span> MOTOR<span class="token operator">-&gt;</span>DATA<span class="token punctuation">.</span>Angle_now<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="绝对值" tabindex="-1"><a class="header-anchor" href="#绝对值" aria-hidden="true">#</a> 绝对值</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">//int16_t取绝对值</span>
<span class="token class-name">int16_t</span> <span class="token function">RUI_F_MATH_ABS_int16_t</span><span class="token punctuation">(</span><span class="token class-name">int16_t</span> DATA<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> DATA<span class="token operator">&amp;</span><span class="token number">0x7FFF</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//float取绝对值</span>
<span class="token keyword">float</span> <span class="token function">RUI_F_MATH_ABS_float</span><span class="token punctuation">(</span><span class="token keyword">float</span> DATA<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint32_t</span> RUI_V_TEMP <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>DATA<span class="token punctuation">;</span>
    RUI_V_TEMP <span class="token operator">&amp;=</span> <span class="token number">0x7FFFFFFF</span><span class="token punctuation">;</span> <span class="token comment">// 将符号位清零</span>
    <span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>RUI_V_TEMP<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="浮点平方根倒数" tabindex="-1"><a class="header-anchor" href="#浮点平方根倒数" aria-hidden="true">#</a> 浮点平方根倒数</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">float</span> <span class="token function">RUI_F_MATH_INV_SQRT_float</span><span class="token punctuation">(</span><span class="token keyword">float</span> DATA<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">float</span> DATA_half <span class="token operator">=</span> <span class="token number">0.5f</span> <span class="token operator">*</span> DATA<span class="token punctuation">;</span>
    <span class="token class-name">uint32_t</span> i <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>DATA<span class="token punctuation">;</span> <span class="token comment">// 将浮点数视为无符号整数</span>
    i <span class="token operator">=</span> <span class="token number">0x5f3759df</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 运用魔数进行处理</span>
    DATA <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>i<span class="token punctuation">;</span> <span class="token comment">// 再将无符号整数转回浮点数</span>
    DATA <span class="token operator">=</span> DATA <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.5f</span> <span class="token operator">-</span> DATA_half <span class="token operator">*</span> DATA <span class="token operator">*</span> DATA<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 进行牛顿迭代</span>
    <span class="token keyword">return</span> DATA<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查表法" tabindex="-1"><a class="header-anchor" href="#查表法" aria-hidden="true">#</a> 查表法</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">uint8_t</span> <span class="token function">RUI_F_MOD</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> RUI_V_MOD<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token punctuation">{</span>RUI_DF_MOD_HEAD_ARM<span class="token punctuation">,</span>RUI_DF_MOD_HEAD_CUP<span class="token punctuation">,</span>RUI_DF_MOD_HEAD_CUP_SHUT<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>RUI_DF_MOD_BOTTOM_MOVE<span class="token punctuation">,</span>RUI_DF_MOD_BOTTOM_UP<span class="token punctuation">,</span>RUI_DF_MOD_BOTTOM_DOWN<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>RUI_DF_MOD_KEYBOARD<span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token class-name">uint8_t</span> RUI_V_DBUS_R <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> RUI_V_DBUS_L <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> RUI_L_DBUS_TABLE<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> RUI_R_DBUS_TABLE<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    RUI_V_DBUS_L <span class="token operator">=</span> RUI_L_DBUS_TABLE<span class="token punctuation">[</span>RUI_V_DBUS<span class="token punctuation">.</span>Remote<span class="token punctuation">.</span>S2_u8 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    RUI_V_DBUS_R <span class="token operator">=</span> RUI_R_DBUS_TABLE<span class="token punctuation">[</span>RUI_V_DBUS<span class="token punctuation">.</span>Remote<span class="token punctuation">.</span>S1_u8 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span>  RUI_V_MOD<span class="token punctuation">[</span>RUI_V_DBUS_L<span class="token punctuation">]</span><span class="token punctuation">[</span>RUI_V_DBUS_R<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","optimize.html.vue"]]);export{r as default};
