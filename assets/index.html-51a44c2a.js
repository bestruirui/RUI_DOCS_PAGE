import{ab as o,C as c,D as d,A as e,J as r,ac as t,ad as s,R as i,O as n}from"./framework-e618a78f.js";const l={},h=s(`<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2><p><strong>Docker</strong>是一个开放源代码的开放平台软件，用于开发应用、交付应用、运行应用。Docker允许用户将基础设施中的应用单独分割出来，形成更小的颗粒，从而提高交付软件的速度。<br><strong>Docker容器</strong>与虚拟机类似，但二者在原理上不同。容器是将操作系统层虚拟化，虚拟机则是虚拟化硬件，因此容器更具有便携性、高效地利用服务器。 容器更多的用于表示 软件的一个标准化单元。由于容器的标准化，因此它可以无视基础设施（Infrastructure）的差异，部署到任何一个地方。另外，Docker也为容器提供更强的业界的隔离兼容。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -sSL https://get.docker.com/ | sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2>`,5);function u(_,m){const a=i("RouterLink");return c(),d("div",null,[h,e("ul",null,[e("li",null,[r(a,{to:"/Learn/Docker/config.html"},{default:t(()=>[n(" 常用命令 ")]),_:1})]),e("li",null,[r(a,{to:"/Learn/Docker/%E5%B8%B8%E7%94%A8%E5%AE%B9%E5%99%A8.html"},{default:t(()=>[n(" 常用容器 ")]),_:1})])])])}const k=o(l,[["render",u],["__file","index.html.vue"]]);export{k as default};
