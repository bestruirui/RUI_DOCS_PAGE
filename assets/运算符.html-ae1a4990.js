import{ab as t,C as d,D as a,ad as n}from"./framework-e618a78f.js";const s={},e=n(`<h2 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a> 算术运算符</h2><p>算术运算符用于执行常见的数学运算。</p><table><thead><tr><th>Operator</th><th>Name</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>+</td><td>加 Addition</td><td>将两个值相加</td><td>x + y</td></tr><tr><td>-</td><td>减 Subtraction</td><td>从另一个值中减去一个值</td><td>x - y</td></tr><tr><td>*</td><td>乘 Multiplication</td><td>将两个值相乘</td><td>x * y</td></tr><tr><td>/</td><td>除 Division</td><td>将一个值除以另一个</td><td>x / y</td></tr><tr><td>%</td><td>取模 Modulus</td><td>返回除法余数</td><td>x % y</td></tr><tr><td>++</td><td>增量 Increment</td><td>将变量的值增加 1</td><td>++x</td></tr><tr><td>--</td><td>乘量 Decrement</td><td>将变量的值减 1</td><td>--x</td></tr></tbody></table><h2 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符" aria-hidden="true">#</a> 赋值运算符</h2><p>赋值运算符用于为变量赋值。</p><p>在下面的示例中，我们使用 <strong>赋值</strong> 运算符 (<code>=</code>) 将值 <strong>10</strong> 分配给名为 <strong>x</strong> 的变量：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>加法赋值</strong>运算符 (<code>+=</code>) 将值添加到变量：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
x <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>所有赋值运算符的列表：</p><table><thead><tr><th>符号</th><th>示例</th><th>如同</th></tr></thead><tbody><tr><td>=</td><td>x = 5</td><td>x = 5</td></tr><tr><td>+=</td><td>x += 3</td><td>x = x + 3</td></tr><tr><td>-=</td><td>x -= 3</td><td>x = x - 3</td></tr><tr><td>*=</td><td>x *= 3</td><td>x = x * 3</td></tr><tr><td>/=</td><td>x /= 3</td><td>x = x / 3</td></tr><tr><td>%=</td><td>x %= 3</td><td>x = x % 3</td></tr><tr><td>&amp;=</td><td>x &amp;= 3</td><td>x = x &amp; 3</td></tr><tr><td>|=</td><td>x |= 3</td><td>x = x | 3</td></tr><tr><td>^=</td><td>x ^= 3</td><td>x = x ^ 3</td></tr><tr><td>&gt;&gt;=</td><td>x &gt;&gt;= 3</td><td>x = x &gt;&gt; 3</td></tr><tr><td>&lt;&lt;=</td><td>x &lt;&lt;= 3</td><td>x = x &lt;&lt; 3</td></tr></tbody></table><h2 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符" aria-hidden="true">#</a> 比较运算符</h2><p>比较运算符用于比较两个值。</p><p><strong>注意：</strong> 比较的返回值为 true (<code>1</code>) 或 false (<code>0</code>)。</p><p>在以下示例中，我们使用 <strong>大于</strong> 运算符 (<code>&gt;</code>) 来确定 5 是否大于 3：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 1（真），因为 5 大于 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有比较运算符的列表：</p><table><thead><tr><th>符号</th><th>名称</th><th>示例</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>x == y</td></tr><tr><td>!=</td><td>不等于</td><td>x != y</td></tr><tr><td>&gt;</td><td>大于</td><td>x &gt; y</td></tr><tr><td>&lt;</td><td>小于</td><td>x &lt; y</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>x &gt;= y</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>x &lt;= y</td></tr></tbody></table><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h2><p>逻辑运算符用于确定变量或值之间的逻辑：</p><table><thead><tr><th>符号</th><th>名称</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与逻辑</td><td>如果两个语句都为真，则返回真</td><td>x &lt; 5 &amp;&amp; x &lt; 10</td></tr><tr><td>||</td><td>或逻辑</td><td>如果其中一个语句为真，则返回真</td><td>x &lt; 5 || x &lt; 4</td></tr><tr><td>!</td><td>非逻辑</td><td>反转结果，如果结果为真则返回假</td><td>!(x &lt; 5 &amp;&amp; x &lt; 10)</td></tr></tbody></table>`,21),r=[e];function o(p,c){return d(),a("div",null,r)}const i=t(s,[["render",o],["__file","运算符.html.vue"]]);export{i as default};
